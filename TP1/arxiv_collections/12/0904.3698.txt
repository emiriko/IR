Control systems are sets of interconnected hardware and software components
which regulate the behaviour of processes. The software of modern control
systems rises for some years by requirements regarding the flexibility and
functionality. Thus the force of innovation grows on enterprises, since ever
newer products in ever shorter time intervals must be made available.
Associated hereby is the crucial shortening of the product life cycle, whose
effects show up in reduced care of the software and the spares inventory. The
aim, the concept presented here and developed in a modeling environment, is
proved and ensures a minimum functionality of software components. Replacing
software components of a control system verified for functionality by a
framework at run-time and if necessary the software conditions will become
adapted. Quintessential point of this implementation is the usage of an
abstract syntax tree. Within its hierarchical structure meta information is
attached to nodes and processed by the framework. With the development of the
concept for semantic proving of software components the lifetime of
software-based products is increased.