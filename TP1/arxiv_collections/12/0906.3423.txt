Developing and maintaining complex, large-scale, product line of highly
customized software systems is difficult and costly. Part of the difficulty is
due to the need to communicate business knowledge between domain experts and
application programmers. Domain specific model driven development (MDD)
addresses this difficulty by providing domain experts and developers with
domain specific abstractions for communicating designs. Most MDD
implementations take a generative approach. In contrast, we adopt an
interpretive approach to domain specific model driven development. We present a
framework, named ModelTalk, that integrates MDD, dependency injection and
meta-modeling to form an interpretive, domain specific modeling framework. The
framework is complemented by tool support that provides developers with the
same advanced level of usability for modeling as they are accustomed to in
programming environments. ModelTalk is used in a commercial setting for
developing a product line of Telco grade business support systems (BSS).