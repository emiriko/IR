When configuring customizable software, it is useful to provide interactive
tool-support that ensures that the configuration does not breach given
constraints.
  But, when is a configuration complete and how can the tool help the user to
complete it?
  We formalize this problem and relate it to concepts from non-monotonic
reasoning well researched in Artificial Intelligence. The results are
interesting for both practitioners and theoreticians. Practitioners will find a
technique facilitating an interactive configuration process and experiments
supporting feasibility of the approach. Theoreticians will find links between
well-known formal concepts and a concrete practical application.