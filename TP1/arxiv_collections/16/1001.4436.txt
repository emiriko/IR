The study of variability in software development has become increasingly
important in recent years. A common mechanism to represent the variability in a
product line is by means of feature models. However, the relationship between
these models and UML design models is not straightforward. UML statecharts are
extended introducing variability in their main components, so that the behavior
of product lines can be specified. The contribution of this work is the
proposal of a rule-based approach that defines a transformation strategy from
extended statecharts to concrete UML statecharts. This is accomplished via the
use of feature models, in order to describe the common and variant components,
in such a way that, starting from different feature configurations and applying
the rule-based method, concrete state machines corresponding to different
products of a line can be obtained.