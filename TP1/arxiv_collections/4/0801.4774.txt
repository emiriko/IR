Spreadsheets are used to develop application software that is distributed to
users. Unfortunately, the users often have the ability to change the
programming statements ("source code") of the spreadsheet application. This
causes a host of problems. By critically examining the suitability of
spreadsheet computer programming languages for application development, six
"application development features" are identified, with source code protection
being the most important. We investigate the status of these features and
discuss how they might be implemented in the dominant Microsoft Excel
spreadsheet and in the new Google Spreadsheet. Although Google Spreadsheet
currently provides no source code control, its web-centric delivery model
offers technical advantages for future provision of a rich set of features.
Excel has a number of tools that can be combined to provide "pretty good
protection" of source code, but weak passwords reduce its robustness. User
access to Excel source code must be considered a programmer choice rather than
an attribute of the spreadsheet.