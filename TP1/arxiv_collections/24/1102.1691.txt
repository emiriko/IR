We present a method to eliminate redundancy in the transition tables of
Boolean automata: schema redescription with two symbols. One symbol is used to
capture redundancy of individual input variables, and another to capture
permutability in sets of input variables: fully characterizing the canalization
present in Boolean functions. Two-symbol schemata explain aspects of the
behaviour of automata networks that the characterization of their emergent
patterns does not capture. We use our method to compare two well-known cellular
automata for the density classification task: the human engineered CA GKL, and
another obtained via genetic programming (GP). We show that despite having very
different collective behaviour, these rules are very similar. Indeed, GKL is a
special case of GP. Therefore, we demonstrate that it is more feasible to
compare cellular automata via schema redescriptions of their rules, than by
looking at their emergent behaviour, leading us to question the tendency in
complexity research to pay much more attention to emergent patterns than to
local interactions.