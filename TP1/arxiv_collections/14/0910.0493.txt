When engineering complex and distributed software and hardware systems
(increasingly used in many sectors, such as manufacturing, aerospace,
transportation, communication, energy, and health-care), quality has become a
big issue, since failures can have economics consequences and can also endanger
human life. Model-based specifications of a component-based system permit to
explicitly model the structure and behaviour of components and their
integration. In particular Software Architectures (SA) has been advocated as an
effective means to produce quality systems. In this chapter by combining
different technologies and tools for analysis and development, we propose an
architecture-centric model-driven approach to validate required properties and
to generate the system code. Functional requirements are elicited and used for
identifying expected properties the architecture shall express. The
architectural compliance to the properties is formally demonstrated, and the
produced architectural model is used to automatically generate the Java code.
Suitable transformations assure that the code is conforming to both structural
and behavioural SA constraints. This chapter describes the process and
discusses how some existing tools and languages can be exploited to support the
approach.