As the digital world enters further into everyday life, questions are raised
about the increasing challenges brought by the interaction of real-time
software with physical devices. Many accidents and incidents encountered in
areas as diverse as medical systems, transportation systems or weapon systems
are ultimately attributed to "software failures". Since real-time software that
interacts with physical systems might as well be called control software, the
long litany of accidents due to real-time software failures might be taken as
an equally long list of opportunities for control systems engineering. In this
paper, we are interested only in run-time errors in those pieces of software
that are a direct implementation of control system specifications: For
well-defined and well-understood control architectures such as those present in
standard textbooks on digital control systems, the current state of theoretical
computer science is well-equipped enough to address and analyze control
algorithms. It appears that a central element to these analyses is Lyapunov
stability theory, which translate into invariant theory in computer
implementations.