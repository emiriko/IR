The paper presents two complementary strategies for identifying errors in
spreadsheet programs. The strategies presented are grounded on the assumption
that spreadsheets are software, albeit of a different nature than conventional
procedural software. Correspondingly, strategies for identifying errors have to
take into account the inherent properties of spreadsheets as much as they have
to recognize that the conceptual models of 'spreadsheet programmers' differ
from the conceptual models of conventional programmers. Nevertheless, nobody
can and will write a spreadsheet, without having such a conceptual model in
mind, be it of numeric nature or be it of geometrical nature focused on some
layout.