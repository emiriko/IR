Qualification has been recently introduced as a generalization of uncertainty
in the field of Logic Programming. In this report we investigate a more
expressive language for First-Order Functional Logic Programming with
Constraints and Qualification. We present a Rewriting Logic which characterizes
the intended semantics of programs, and a prototype implementation based on a
semantically correct program transformation. Potential applications of the
resulting language include flexible information retrieval. As a concrete
illustration, we show how to write program rules to compute qualified answers
for user queries concerning the books available in a given library.