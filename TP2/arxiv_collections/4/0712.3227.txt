We present a quantum CISC compiler and show how to assemble complex
instruction sets in a scalable way. Enlarging the toolbox of universal gates by
optimised complex multi-qubit instruction sets thus paves the way to fight
decoherence for realistic settings.
  Compiling a quantum module into the machine code for steering a concrete
quantum hardware device lends itself to be tackled by means of optimal quantum
control. To this end, there are two opposite approaches: (i) one may use a
decomposition into the restricted instruction set (RISC) of universal one- and
two-qubit gates, which in turn have prefabricated translations into the machine
code or (ii) one may prefer to generate the entire target module directly by a
complex instruction set (CISC) of available controls. Here we advocate direct
compilation up to the limit of system size a classical high-performance
parallel computer cluster can reasonably handle. For going beyond these limits,
i.e. for large systems we propose a combined way, namely (iii) to make
recursive use of medium-sized building blocks generated by optimal control in
the sense of a quantum CISC compiler.
  The advantage of the method over standard RISC compilations into one- and
two-qubit universal gates is explored on the parallel cluster HLRB-II (with a
total LINPACK performance of 63.3 TFlops/s) for the quantum Fourier transform,
the indirect SWAP gate as well as for multiply-controlled CNOT gates.
Implications for upper limits to time complexities are also derived.