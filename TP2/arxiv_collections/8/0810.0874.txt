The main problems of Software Engineering appear as a result of
incompatibilities. For example, the quality of organization of the production
process depends on correspondence with existent resources and on a common
understanding of project goals by all team members. Software design is another
example. Its successfulness rides on the architecture's conformity with a
project's concepts. This is a point of great nicety. All elements should create
a single space of interaction. And if the laws of such a space are imperfect,
missequencing comes and the concept of a software system fails. We must do our
best for this not to happen. To that end, having a subtle perception of systems
structures is essential. Such knowledge can be based only on a fresh approach
to the logical law.