In computer science, there is a distinction between closed systems, whose
behavior is totally determined in advance, and open systems, that are systems
maintaining a constant interaction with an unspecified environment. Closed
systems are naturally modeled by transitions systems. Open systems have been
modeled in various ways, including process algebras, I/O automata, ``modules'',
and interfaces. Games provide a uniform setting in which all these models can
be cast and compared. In this paper, we discuss the features and costs related
to the game-based approach to open systems, referring to some of the existing
models. Finally, we describe a new model of interface, called sociable
interface, which is geared towards easier specification, improved reusability
of models, and efficient symbolic implementation.